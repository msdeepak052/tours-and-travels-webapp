apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-ingress
  namespace: argocd
  annotations:
    # ALB Core Settings
    alb.ingress.kubernetes.io/group.name: shared-ingress
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS13-1-2-2021-06
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:339712902352:certificate/07756fed-11f9-46f1-8abc-7642d6554270
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Backend Protocol
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    
    # Health Check Configuration
    alb.ingress.kubernetes.io/healthcheck-path: /healthz
    alb.ingress.kubernetes.io/healthcheck-port: "443"
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTPS
    alb.ingress.kubernetes.io/success-codes: 200-399
    alb.ingress.kubernetes.io/healthy-threshold-count: "2"
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "2"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "15"
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: "5"
    
    # Path Handling
    alb.ingress.kubernetes.io/rewrite-target: /
    
spec:
  ingressClassName: alb
  rules:
    - host: argocd.devopswithdeepak.co.in
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80  # Routing to service port 80 (will be upgraded to HTTPS via backend-protocol)
